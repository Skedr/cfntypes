name: Automated build
on:
  push:
  schedule:
    - cron: '0 0 * * *'

jobs:
  check:
    name: Check for update
    runs-on: ubuntu-latest
    outputs:
      update: ${{ steps.check.outcome }}

    steps:
      - name: Git Checkout
        uses: actions/checkout@v2

      - id: check
        name: Check version
        continue-on-error: true
        run: node check-version.js

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: check
    if: github.event_name == 'push' || needs.check.outputs.update == 'success'

    steps:
      - name: Git Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Get yarn cache directory
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Restore yarn cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Yarn install
        run: yarn install --frozen-lockfile

      - name: Build all
        run: yarn build

      - name: Git Commit
        if: github.ref == 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        run: |
          git config user.email "actions@github.com"
          git config user.name "Github Actions"
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          git add package.json
          git diff --quiet && git diff --staged --quiet || (git commit -m "bump version"; git push origin main)

      - name: NPM publish
        if: github.ref == 'refs/heads/main'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish
